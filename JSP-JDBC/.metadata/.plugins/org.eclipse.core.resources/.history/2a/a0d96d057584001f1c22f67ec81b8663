package servlets;

import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.sql.Date;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.List;

import dao.DaoAutor;
import dao.DaoSocio;
import entidades.Autor;
import entidades.Socio;

/**
 * Servlet implementation class ControllerAdmin
 */
public class ControllerAdmin extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public ControllerAdmin() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//obtenemos la operaci칩n que han seleccionado en el menu
		String operacion = request.getParameter("operacion");	
		
		DaoAutor daoAutor = null;  //variable dao para autores
		
		switch (operacion) {
		
		case "insertaautor":
			//me han pedido insertar un autor. Lo primero ser치 crear el autor con los campos que vengan en la request
			String nombre =request.getParameter("nombre");
			String strFechaNacimiento = request.getParameter("fechaNacimiento");
			
			//transformamos la fecha a java.sql.Date
			DateTimeFormatter formato = DateTimeFormatter.ofPattern("yyyy-MM-dd");
			LocalDate localDate = LocalDate.parse(strFechaNacimiento,formato);
			Date  fechaEnSql = java.sql.Date.valueOf(localDate);
			
			//creamos el objeto Autor
			Autor autor = new Autor();
			autor.setNombre(nombre);
			autor.setFechaNacimiento(fechaEnSql);
			
			//creamos el objeto DAO
			daoAutor = new DaoAutor();
			
			try {
				//insertamos
				daoAutor.insertaAutor(autor);
				
				//ofrezco una respuesta
				request.setAttribute("confirmaroperacion", "Autor creado satisfactoriamente");
				request.getRequestDispatcher("admin/altaautor.jsp").forward(request, response); //redirecciono
			} catch (SQLException e) {
				procesarError(request, response, e, "admin/altaautor.jsp");
			} catch (Exception e) {
				procesarError(request, response, e, "admin/altaautor.jsp");
			}
			
			break;
			
		case "registrarse":
			System.out.println("Entrando en registrarse....");
			nombre = request.getParameter("nombre");
			String email = request.getParameter("email");
			String clave = request.getParameter("password");
			String direccion = request.getParameter("direccion");

			DaoSocio daosocio = new DaoSocio();
			Socio socio = new Socio();
			socio.setNombre(nombre);
			socio.setEmail(email);
			socio.setClave(clave);
			socio.setDireccion(direccion);
			try {
				daosocio.insertarSocio(socio);
				//recuperamos el socio que ya vendr치 con el ID completo
				socio = daosocio.findSocioByEmail(socio.getEmail());
				request.setAttribute("socio", socio);
				request.setAttribute("confirmaroperacion", "Socio "+socio.getIdsocio()+" creado satisfactoriamente");
				request.getRequestDispatcher("admin/altasocio.jsp").forward(request, response);
			} catch (SQLException e) {
				System.out.println(e.toString());
				procesarError(request, response, e,"admin/altasocio.jsp");
			} catch (Exception e) {
				procesarError(request, response, e,"admin/altasocio.jsp");
			}
			break;
			
		case "listadoSociosPaginado":

			List<Socio> listadoSocios = null;
			DaoSocio daoSocio = new DaoSocio();
			int totalRegistros = 0;
			int pagina = 0;// pagina por defecto
			int numregpag = 5; // numrepag por defecto
			int paginamasalta = 0;
			if (request.getParameter("pag") != null)
				pagina = Integer.parseInt(request.getParameter("pag"));
			if (request.getParameter("nrp") != null)
				numregpag = Integer.parseInt(request.getParameter("nrp"));
			try {
				totalRegistros = daoSocio.getTotalRegistros();
				paginamasalta = totalRegistros / numregpag;
				if (totalRegistros % numregpag == 0)
					paginamasalta--;
				System.out.println("La pagina m치s alta es: " + paginamasalta);
				listadoSocios = daoSocio.listadoSocios(pagina, numregpag);
				/* SIN SEGURIDAD */
				request.setAttribute("pagina", pagina);
				request.setAttribute("numregpag", numregpag);
				request.setAttribute("totalregistros", totalRegistros);
				request.setAttribute("listadoSocios", listadoSocios);
				request.setAttribute("paginamasalta", paginamasalta);
				request.getRequestDispatcher("admin/listadosociospaginado.jsp").forward(request, response);
			} catch (SQLException e) {
				System.out.println(e.toString());
				procesarError(request, response, e, null);

			} catch (Exception e) {
				procesarError(request, response, e, null);
			}
			break;	
		
		default:
			break;
		}
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

	protected void procesarError(HttpServletRequest request, HttpServletResponse response, Exception e, String url) throws ServletException, IOException {
		String mensajeError = e.getMessage();
		request.setAttribute("error", mensajeError);
		if(url == null) {
			url = "error.jsp";
		}
		request.getRequestDispatcher(url).forward(request, response);
	}
	

}
